{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\\\uC218\\uC601\\\\Desktop\\\\nodebird\\\\front\\\\components\\\\PostCard.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Avatar, Button, Card, Popover } from 'antd';\nimport { RetweetOutlined } from '@ant-design/icons';\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var post = _ref.post;\n  var _useSelector = useSelector(function (state) {\n      var _state$user$me;\n      return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n    }),\n    id = _useSelector.id;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    conver: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 41\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }\n    }), __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 28\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 31\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  })));\n};\n_s(PostCard, \"4MVYJoCTHgV8s+RakI4Eicf7Tnc=\", false, function () {\n  return [useSelector];\n});\n_c = PostCard;\nPostCard.PropTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Image: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","PropTypes","Avatar","Button","Card","Popover","RetweetOutlined","EllipsisOutlined","HeartOutlined","MessageOutlined","useSelector","PostImages","PostCard","post","state","user","me","id","Images","User","nickname","content","shape","number","object","string","createdAt","Comments","arrayOf","Image","isRequired"],"sources":["C:/Users/수영/Desktop/nodebird/front/components/PostCard.js"],"sourcesContent":["import React from 'react';\r\nimport {PropTypes} from 'prop-types';\r\nimport { Avatar, Button, Card, Popover } from 'antd';\r\nimport { RetweetOutlined } from '@ant-design/icons';\r\nimport { EllipsisOutlined, HeartOutlined,  MessageOutlined } from '@ant-design/icons';\r\nimport { useSelector } from 'react-redux';\r\nimport PostImages from './PostImages';\r\n\r\nconst PostCard=({post})=>{\r\n    const {id}=useSelector((state)=>state.user.me?.id);\r\n    return(\r\n        <div>\r\n            <Card \r\n                conver={post.Images[0]&&<PostImages images={post.Images}/>}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\"/>,\r\n                    <HeartOutlined key=\"heart\"/>,\r\n                    <MessageOutlined key=\"comment\"/>,\r\n                    <Popover key=\"more\" content={(\r\n                        <Button.Group>\r\n                           {id && post.User.id === id?(\r\n                           <>\r\n                           <Button>수정</Button>\r\n                            <Button type='danger'>삭제</Button>\r\n                            </>\r\n                            ):<Button>신고</Button>}\r\n                        </Button.Group>\r\n                    )}>\r\n                        <EllipsisOutlined/>\r\n                    </Popover>\r\n                ]}\r\n            >\r\n                <Card.Meta\r\n                avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                title={post.User.nickname}\r\n                description={post.content}\r\n                />\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nPostCard.PropTypes={\r\n    post:PropTypes.shape({\r\n        id:PropTypes.number,\r\n        User:PropTypes.object,\r\n        content:PropTypes.string,\r\n        createdAt:PropTypes.object,\r\n        Comments:PropTypes.arrayOf(PropTypes.object),\r\n        Image:PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n}\r\n\r\nexport default PostCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}