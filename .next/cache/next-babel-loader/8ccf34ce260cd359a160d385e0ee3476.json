{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC218\\uC601\\\\Desktop\\\\nodebird\\\\front\\\\components\\\\CommentForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport useInput from \"../hooks/useInput\";\nimport { PropTypes } from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from './../reducers/post';\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone\n  } = useSelector(state => state.post);\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    style: {\n      position: \"absolute\",\n      right: 0,\n      bottom: -40\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"zee\")));\n};\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"names":["React","useCallback","useEffect","Button","Form","Input","useInput","PropTypes","useSelector","useDispatch","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","user","me","addCommentDone","commentText","onChangeCommentText","setCommentText","onSubmitComment","console","log","type","data","content","postId","userId","position","margin","right","bottom","propTypes","object","isRequired"],"sources":["C:/Users/수영/Desktop/nodebird/front/components/CommentForm.js"],"sourcesContent":["import React,{useCallback,useEffect} from \"react\"\r\nimport { Button, Form, Input } from \"antd\"\r\nimport useInput from \"../hooks/useInput\";\r\nimport { PropTypes } from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from './../reducers/post';\r\n\r\n\r\nconst CommentForm =({post})=>{\r\n    const dispatch = useDispatch();\r\n    const id = useSelector((state)=>state.user.me?.id);\r\n    const {addCommentDone} = useSelector((state)=>state.post);\r\n    const [commentText,onChangeCommentText,setCommentText] =useInput('');\r\n\r\n    useEffect(()=>{\r\n        if(addCommentDone){\r\n            setCommentText('');\r\n        }\r\n    },[addCommentDone])\r\n\r\n    const onSubmitComment = useCallback(()=>{\r\n        console.log(post.id,commentText);\r\n        dispatch({\r\n            type:ADD_COMMENT_REQUEST,\r\n           data:{content:commentText,postId:post.id,userId:id} \r\n        });\r\n    },[commentText,id])\r\n    return(\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item style={{position:'relative',margin:0}}>\r\n            <Input.TextArea \r\n                value={commentText}\r\n                onChange={onChangeCommentText}\r\n                rows={4}\r\n                />\r\n                <Button style={{position:\"absolute\",right:0,bottom:-40}} type=\"primary\" htmlType=\"submit\">zee</Button>\r\n                </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nCommentForm.propTypes={\r\n    post:PropTypes.object.isRequired,\r\n}\r\n\r\nexport default CommentForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,WAAW,EAACC,SAAS,QAAO,OAAO;AACjD,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AAC1C,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,mBAAmB,QAAQ,oBAAoB;AAGxD,MAAMC,WAAW,GAAE,CAAC;EAACC;AAAI,CAAC,KAAG;EACzB,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,MAAMK,EAAE,GAAGN,WAAW,CAAEO,KAAK;IAAA;IAAA,yBAAGA,KAAK,CAACC,IAAI,CAACC,EAAE,mDAAb,eAAeH,EAAE;EAAA,EAAC;EAClD,MAAM;IAACI;EAAc,CAAC,GAAGV,WAAW,CAAEO,KAAK,IAAGA,KAAK,CAACH,IAAI,CAAC;EACzD,MAAM,CAACO,WAAW,EAACC,mBAAmB,EAACC,cAAc,CAAC,GAAEf,QAAQ,CAAC,EAAE,CAAC;EAEpEJ,SAAS,CAAC,MAAI;IACV,IAAGgB,cAAc,EAAC;MACdG,cAAc,CAAC,EAAE,CAAC;IACtB;EACJ,CAAC,EAAC,CAACH,cAAc,CAAC,CAAC;EAEnB,MAAMI,eAAe,GAAGrB,WAAW,CAAC,MAAI;IACpCsB,OAAO,CAACC,GAAG,CAACZ,IAAI,CAACE,EAAE,EAACK,WAAW,CAAC;IAChCN,QAAQ,CAAC;MACLY,IAAI,EAACf,mBAAmB;MACzBgB,IAAI,EAAC;QAACC,OAAO,EAACR,WAAW;QAACS,MAAM,EAAChB,IAAI,CAACE,EAAE;QAACe,MAAM,EAACf;MAAE;IACrD,CAAC,CAAC;EACN,CAAC,EAAC,CAACK,WAAW,EAACL,EAAE,CAAC,CAAC;EACnB,OACI,MAAC,IAAI;IAAC,QAAQ,EAAEQ,eAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC5B,MAAC,IAAI,CAAC,IAAI;IAAC,KAAK,EAAE;MAACQ,QAAQ,EAAC,UAAU;MAACC,MAAM,EAAC;IAAC,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjD,MAAC,KAAK,CAAC,QAAQ;IACX,KAAK,EAAEZ,WAAY;IACnB,QAAQ,EAAEC,mBAAoB;IAC9B,IAAI,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACN,EACF,MAAC,MAAM;IAAC,KAAK,EAAE;MAACU,QAAQ,EAAC,UAAU;MAACE,KAAK,EAAC,CAAC;MAACC,MAAM,EAAC,CAAC;IAAE,CAAE;IAAC,IAAI,EAAC,SAAS;IAAC,QAAQ,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,SAAa,CAC1F,CACb;AAEf,CAAC;AAEDtB,WAAW,CAACuB,SAAS,GAAC;EAClBtB,IAAI,EAACL,SAAS,CAAC4B,MAAM,CAACC;AAC1B,CAAC;AAED,eAAezB,WAAW"},"metadata":{},"sourceType":"module"}