{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\nvar configureStore = function configureStore() {\n  var middlewares = [];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  return store;\n};\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","reducer","configureStore","middlewares","enhancer","store","wrapper","debug"],"sources":["C:/Users/수영/Desktop/nodebird/front/store/configureStore.js"],"sourcesContent":["import {createWrapper} from 'next-redux-wrapper';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer from '../reducers'\r\n\r\nconst configureStore=()=>{\r\n    const middlewares=[];\r\n    const enhancer = process.env.NODE_ENV ==='production'\r\n    ?compose(applyMiddleware(...middlewares))\r\n    :composeWithDevTools(applyMiddleware(...middlewares))\r\n    const store = createStore(reducer,enhancer);\r\n\r\n    return store;\r\n};\r\n\r\nconst wrapper =createWrapper(configureStore,{ \r\n    debug:process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default wrapper;"],"mappings":"AAAA,SAAQA,aAAa,QAAO,oBAAoB;AAChD,SAASC,eAAe,EAAEC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AAC7D,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,OAAO,MAAM,aAAa;AAEjC,IAAMC,cAAc,GAAC,SAAfA,cAAc,GAAK;EACrB,IAAMC,WAAW,GAAC,EAAE;EACpB,IAAMC,QAAQ,GAAG,QAChBN,OAAO,CAACD,eAAe,eAAIM,WAAW,CAAC,CAAC,GACxCH,mBAAmB,CAACH,eAAe,eAAIM,WAAW,CAAC,CAAC;EACrD,IAAME,KAAK,GAAGN,WAAW,CAACE,OAAO,EAACG,QAAQ,CAAC;EAE3C,OAAOC,KAAK;AAChB,CAAC;AAED,IAAMC,OAAO,GAAEV,aAAa,CAACM,cAAc,EAAC;EACxCK,KAAK;AACT,CAAC,CAAC;AAEF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}