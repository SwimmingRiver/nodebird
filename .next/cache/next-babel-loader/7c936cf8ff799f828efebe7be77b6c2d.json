{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\\\uC218\\uC601\\\\Desktop\\\\nodebird\\\\front\\\\components\\\\PostCard.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Avatar, Button, Card, List, Popover, Comment } from 'antd';\nimport { RetweetOutlined } from '@ant-design/icons';\nimport { EllipsisOutlined, HeartOutlined, HeartTwoTone, MessageOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport CommentForm from './CommetForm';\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var post = _ref.post;\n  var _useState = useState(false),\n    liked = _useState[0],\n    setLiked = _useState[1];\n  var _useState2 = useState(false),\n    commnetFormOpened = _useState2[0],\n    setCommentFormOpened = _useState2[1];\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return __jsx(\"div\", {\n    style: {\n      marginButtom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 40\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 22\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 22\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      onClick: onToggleComment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 28\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 31\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })), commnetFormOpened && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 20\n    }\n  }), __jsx(List, {\n    header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: function renderItem(item) {\n      return __jsx(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }, __jsx(Comment, {\n        author: item.User.nickname,\n        avatar: __jsx(Avatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 40\n          }\n        }, item.User.nickname[0]),\n        content: item.content,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 32\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 20\n    }\n  })));\n};\n_s(PostCard, \"01VRoWuxhwTxjrDS5e3dx1o8GHs=\", false, function () {\n  return [useSelector];\n});\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","useState","useCallback","PropTypes","Avatar","Button","Card","List","Popover","Comment","RetweetOutlined","EllipsisOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","useSelector","PostImages","CommentForm","PostCard","post","liked","setLiked","commnetFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","id","state","user","me","marginButtom","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"sources":["C:/Users/수영/Desktop/nodebird/front/components/PostCard.js"],"sourcesContent":["import React,{useState,useCallback} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Avatar, Button, Card, List, Popover, Comment } from 'antd';\r\nimport { RetweetOutlined } from '@ant-design/icons';\r\nimport { EllipsisOutlined, HeartOutlined,HeartTwoTone,  MessageOutlined } from '@ant-design/icons';\r\nimport { useSelector } from 'react-redux';\r\nimport PostImages from './PostImages';\r\nimport CommentForm from './CommetForm';\r\n\r\nconst PostCard=({post})=>{\r\n    const [liked,setLiked]=useState(false);\r\n    const [commnetFormOpened,setCommentFormOpened]=useState(false);\r\n    const onToggleLike =useCallback(()=>{\r\n        setLiked((prev)=>!prev);\r\n    },[]);\r\n    const onToggleComment=useCallback(()=>{\r\n        setCommentFormOpened((prev)=>!prev)\r\n    },[])\r\n    const id = useSelector((state)=>state.user. me?.id);\r\n    return(\r\n        <div style={{marginButtom:20}}>\r\n            <Card \r\n                cover={post.Images[0]&&<PostImages images={post.Images}/>}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\"/>,\r\n                    liked\r\n                    ?<HeartTwoTone twoToneColor=\"#eb2f96\"  key=\"heart\" onClick={onToggleLike}/>\r\n                    :<HeartOutlined key=\"heart\" onClick={onToggleLike}/>,\r\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment}/>,\r\n                    <Popover key=\"more\" content={(\r\n                        <Button.Group>\r\n                           {id && post.User.id === id?(\r\n                           <>\r\n                           <Button>수정</Button>\r\n                            <Button type='danger'>삭제</Button>\r\n                            </>\r\n                            ):<Button>신고</Button>}\r\n                        </Button.Group>\r\n                    )}>\r\n                        <EllipsisOutlined/>\r\n                    </Popover>\r\n                ]}\r\n            >\r\n                <Card.Meta\r\n                avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                title={post.User.nickname}\r\n                description={post.content}\r\n                />\r\n            </Card>\r\n            {commnetFormOpened&&(\r\n                <div>\r\n                   <CommentForm post={post}/>\r\n                   <List\r\n                    header={`${post.Comments.length}개의 댓글`}\r\n                    itemLayout='horizontal'\r\n                    dataSource={post.Comments}\r\n                    renderItem={\r\n                        (item)=>(\r\n                            <li>\r\n                               <Comment\r\n                               author={item.User.nickname}\r\n                               avatar={<Avatar>{item.User.nickname[0]}</Avatar>} \r\n                               content={item.content}\r\n                               />\r\n                            </li>\r\n                        )\r\n                    }\r\n                   />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nPostCard.propTypes={\r\n    post:PropTypes.shape({\r\n        id:PropTypes.number,\r\n        User:PropTypes.object,\r\n        content:PropTypes.string,\r\n        createdAt:PropTypes.object,\r\n        Comments:PropTypes.arrayOf(PropTypes.object),\r\n        Images:PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n}\r\n\r\nexport default PostCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}