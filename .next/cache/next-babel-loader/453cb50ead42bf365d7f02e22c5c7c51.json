{"ast":null,"code":"import { all, fork, delay, put, takeLatest } from 'redux-saga';\nimport axios from 'axios';\nfunction logInAPI() {\n  return axios.post('/api/login', data);\n}\nfunction* logIn(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: 'LOG_IN_REQUEST',\n      data: action.data\n    });\n    // const result = yield call(logInAPI,action.data);\n    yield put({\n      type: 'LOG_IN_SUCCESS'\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: 'LOG_OUT_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\nfunction* watchLogIn() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogOut)]);\n}","map":{"version":3,"names":["all","fork","delay","put","takeLatest","axios","logInAPI","post","data","logIn","action","type","err","response","logOutAPI","logOut","result","watchLogIn","watchLogOut","userSaga","watchLogin"],"sources":["C:/Users/수영/Desktop/nodebird/front/sagas/user.js"],"sourcesContent":["import { all, fork,delay,put ,takeLatest} from 'redux-saga';\r\nimport axios from 'axios';\r\n\r\nfunction logInAPI(){\r\n    return axios.post('/api/login',data)\r\n}\r\n\r\nfunction* logIn(action){\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type:'LOG_IN_REQUEST',\r\n            data:action.data,\r\n        })\r\n    // const result = yield call(logInAPI,action.data);\r\n    yield put({\r\n        type:'LOG_IN_SUCCESS',\r\n        });\r\n    } catch(err){\r\n        yield put({\r\n            type:'LOG_IN_FAILURE',\r\n            data:err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction logOutAPI(){\r\n    return axios.post('/api/logout')\r\n}\r\n\r\nfunction* logOut(){\r\n    try{\r\n    // const result = yield call(logOutAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n        type:'LOG_OUT_SUCCESS',\r\n        data:result.data,\r\n        });\r\n    } catch(err){\r\n        yield put({\r\n            type:'LOG_OUT_FAILURE',\r\n            data:err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction* watchLogIn(){\r\n    yield takeLatest('LOG_IN_REQUEST',logIn)\r\n}\r\nfunction* watchLogOut(){\r\n    yield takeLatest('LOG_OUT_REQUEST',logOut)\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchLogOut),\r\n    ])\r\n}"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,EAACC,KAAK,EAACC,GAAG,EAAEC,UAAU,QAAO,YAAY;AAC3D,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,QAAQ,GAAE;EACf,OAAOD,KAAK,CAACE,IAAI,CAAC,YAAY,EAACC,IAAI,CAAC;AACxC;AAEA,UAAUC,KAAK,CAACC,MAAM,EAAC;EACnB,IAAG;IACC,MAAMR,KAAK,CAAC,IAAI,CAAC;IACjB,MAAMC,GAAG,CAAC;MACNQ,IAAI,EAAC,gBAAgB;MACrBH,IAAI,EAACE,MAAM,CAACF;IAChB,CAAC,CAAC;IACN;IACA,MAAML,GAAG,CAAC;MACNQ,IAAI,EAAC;IACL,CAAC,CAAC;EACN,CAAC,CAAC,OAAMC,GAAG,EAAC;IACR,MAAMT,GAAG,CAAC;MACNQ,IAAI,EAAC,gBAAgB;MACrBH,IAAI,EAACI,GAAG,CAACC,QAAQ,CAACL;IACtB,CAAC,CAAC;EACN;AACJ;AAEA,SAASM,SAAS,GAAE;EAChB,OAAOT,KAAK,CAACE,IAAI,CAAC,aAAa,CAAC;AACpC;AAEA,UAAUQ,MAAM,GAAE;EACd,IAAG;IACH;IACA,MAAMb,KAAK,CAAC,IAAI,CAAC;IACjB,MAAMC,GAAG,CAAC;MACNQ,IAAI,EAAC,iBAAiB;MACtBH,IAAI,EAACQ,MAAM,CAACR;IACZ,CAAC,CAAC;EACN,CAAC,CAAC,OAAMI,GAAG,EAAC;IACR,MAAMT,GAAG,CAAC;MACNQ,IAAI,EAAC,iBAAiB;MACtBH,IAAI,EAACI,GAAG,CAACC,QAAQ,CAACL;IACtB,CAAC,CAAC;EACN;AACJ;AAIA,UAAUS,UAAU,GAAE;EAClB,MAAMb,UAAU,CAAC,gBAAgB,EAACK,KAAK,CAAC;AAC5C;AACA,UAAUS,WAAW,GAAE;EACnB,MAAMd,UAAU,CAAC,iBAAiB,EAACW,MAAM,CAAC;AAC9C;AAEA,eAAe,UAAUI,QAAQ,GAAE;EAC/B,MAAMnB,GAAG,CAAC,CACNC,IAAI,CAACmB,UAAU,CAAC,EAChBnB,IAAI,CAACiB,WAAW,CAAC,CACpB,CAAC;AACN"},"metadata":{},"sourceType":"module"}