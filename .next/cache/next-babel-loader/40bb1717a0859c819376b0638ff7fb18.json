{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\nimport createSagaMiddleware from '@redux-saga/core';\nimport rootSaga from '../sagas';\n\n// const loggerMiddleware = ({dispatch,getState})=>(next)=>(action)=>{\n//     console.log(action);\n//     return next(action);\n// }\n\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","reducer","createSagaMiddleware","rootSaga","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"sources":["C:/Users/수영/Desktop/nodebird/front/store/configureStore.js"],"sourcesContent":["import {createWrapper} from 'next-redux-wrapper';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer from '../reducers'\r\nimport createSagaMiddleware from '@redux-saga/core';\r\nimport rootSaga from '../sagas'\r\n\r\n// const loggerMiddleware = ({dispatch,getState})=>(next)=>(action)=>{\r\n//     console.log(action);\r\n//     return next(action);\r\n// }\r\n\r\n\r\nconst configureStore=()=>{\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares=[sagaMiddleware];\r\n    const enhancer = process.env.NODE_ENV ==='production'\r\n    ?compose(applyMiddleware(...middlewares))\r\n    :composeWithDevTools(applyMiddleware(...middlewares))\r\n    const store = createStore(reducer,enhancer);\r\n    store.sagaTask = sagaMiddleware.run(rootSaga)\r\n    return store;\r\n};\r\n\r\nconst wrapper =createWrapper(configureStore,{ \r\n    debug:process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default wrapper;"],"mappings":"AAAA,SAAQA,aAAa,QAAO,oBAAoB;AAChD,SAASC,eAAe,EAAEC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AAC7D,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,OAAO,MAAM,aAAa;AACjC,OAAOC,oBAAoB,MAAM,kBAAkB;AACnD,OAAOC,QAAQ,MAAM,UAAU;;AAE/B;AACA;AACA;AACA;;AAGA,IAAMC,cAAc,GAAC,SAAfA,cAAc,GAAK;EACrB,IAAMC,cAAc,GAAGH,oBAAoB,EAAE;EAC7C,IAAMI,WAAW,GAAC,CAACD,cAAc,CAAC;EAClC,IAAME,QAAQ,GAAG,QAChBT,OAAO,CAACD,eAAe,eAAIS,WAAW,CAAC,CAAC,GACxCN,mBAAmB,CAACH,eAAe,eAAIS,WAAW,CAAC,CAAC;EACrD,IAAME,KAAK,GAAGT,WAAW,CAACE,OAAO,EAACM,QAAQ,CAAC;EAC3CC,KAAK,CAACC,QAAQ,GAAGJ,cAAc,CAACK,GAAG,CAACP,QAAQ,CAAC;EAC7C,OAAOK,KAAK;AAChB,CAAC;AAED,IAAMG,OAAO,GAAEf,aAAa,CAACQ,cAAc,EAAC;EACxCQ,KAAK;AACT,CAAC,CAAC;AAEF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}